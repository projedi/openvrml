AC_INIT(src/openvrml/OpenVRML/VrmlScene.cpp)

PACKAGE=openvrml
OPENVRML_MAJOR_VERSION="0"
OPENVRML_MINOR_VERSION="9"
OPENVRML_MICRO_VERSION="1"
VERSION="${OPENVRML_MAJOR_VERSION}.${OPENVRML_MINOR_VERSION}.${OPENVRML_MICRO_VERSION}"
AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AM_CONFIG_HEADER(config.h)

AC_DEFINE_UNQUOTED(OPENVRML_MAJOR_VERSION)
AC_DEFINE_UNQUOTED(OPENVRML_MINOR_VERSION)
AC_DEFINE_UNQUOTED(OPENVRML_MICRO_VERSION)

dnl
dnl Variables to build libantlr as a convenience library
dnl
NOINSTALL_LIBANTLR=libantlr.la
AC_SUBST(INSTALL_LIBANTLR)
AC_SUBST(NOINSTALL_LIBANTLR)
AC_SUBST(LIBANTLR_RPATH_FLAG)
ANTLR_INCLUDEDIR=/vrml97/antlr
AC_SUBST(ANTLR_INCLUDEDIR)
AM_CONDITIONAL(ANTLR_INSTALL_HFILES, test "apple" = "orange")

dnl
dnl Variables to build libjs as a convenience library
dnl
NOINST_LIBJS="libjs.la"
AC_SUBST(LIBJS)
AC_SUBST(NOINST_LIBJS)
AC_SUBST(JS_RPATH_LDFLAG)
JS_INCLUDE_DIR="\$(includedir)"
AC_SUBST(JS_INCLUDE_DIR)
AM_CONDITIONAL(JS_PRELINK_FDLIBM, test "apple" = "orange")
AM_CONDITIONAL(JS_INSTALL_HFILES, test "apple" = "orange")

dnl
dnl Checks for Win32 stuff
dnl
AC_CYGWIN
AC_MINGW32

dnl
dnl Checks for programs.
dnl
AC_ENABLE_STATIC(yes)
enable_static=yes
AM_PROG_LIBTOOL
AC_PROG_INSTALL
AC_PROG_CXX
AC_PROG_CXXCPP


dnl
dnl Check for libjpeg
dnl
OV_PATH_JPEG(, [libjpeg not found. Check 'config.log' for details.])

dnl
dnl Check for libpng, zlib
dnl
OV_PATH_PNG(, [libpng or zlib not found. Check 'config.log' for details.])

dnl
dnl Check for X, GL/Mesa, glut
dnl
OV_PATH_GLUT(, AC_MSG_ERROR([glut or one of its dependencies not found. See 'config.log' for details.]))

dnl
dnl Test for adequate namespace support in the C++ compiler
dnl
OV_CXX_NAMESPACE(
  ,
  no_cxx_namespaces=true
)
AM_CONDITIONAL(NO_CXX_NAMESPACES, test x$no_cxx_namespaces = xtrue)

OV_CXX_BOOL(
  ,
  AC_MSG_ERROR([Your C++ compiler does not have the required support for the 'bool' keyword. See 'config.log' for details.])
)


dnl Checks for library functions.
AC_CHECK_FUNCS(ftime getcwd gettimeofday mktime strdup strerror strstr)

dnl
dnl Modulate debug mode
dnl
AC_ARG_ENABLE(debug,
  [  --disable-debug         Turn off debugging],
  [
    case "${enableval}" in
      yes) debug=true ;;
      no)  debug=false ;;
      *)   AC_MSG_ERROR([bad value ${enableval} for --enable-debug]) ;;
    esac
  ],
  [ debug=true ]
)
AM_CONDITIONAL(DEBUG, test x$debug = xtrue)

dnl
dnl Allow JavaScript support to be disabled
dnl
AC_ARG_ENABLE(javascript,
  [  --disable-javascript    Disable JavaScript support],
  [ enable_javascript=$enableval ],
  [ enable_javascript=yes ]
)
if test "X$enable_javascript" = "Xno"; then
  AC_DEFINE(OPENVRML_DISABLE_JAVASCRIPT)
  OPENVRML_LIB_SUBDIRS="antlr"
else
  OPENVRML_LIB_SUBDIRS="antlr js"
  dnl
  dnl JavaScript doesn't include config.h, so we have to use automake
  dnl conditionals.
  dnl
  case "$target" in
    *-aix*)
      aix=true
      case `uname -r` in
        *4.3*)
          aix4_3=true
          AC_DEFINE(AIX4_3, ,[needed by jsotypes.h])
          ;;
      esac
      ;;
    *-freebsd*)
      freebsd=true
      ;;
  esac
  AM_CONDITIONAL(FREEBSD, test x$freebsd = xtrue)
  AM_CONDITIONAL(AIX, test x$aix = xtrue)
  AM_CONDITIONAL(AIX4_3, test x$aix4_3 = xtrue)
fi
AC_SUBST(OPENVRML_LIB_SUBDIRS)
AM_CONDITIONAL(DISABLE_JAVASCRIPT, test X$enable_javascript = Xno)

AC_OUTPUT(Makefile \
          doc/Makefile \
          macros/Makefile \
          models/Makefile \
          models/audio/Makefile \
          models/textures/Makefile \
          lib/Makefile \
          lib/antlr/Makefile \
          lib/js/Makefile \
          lib/js/fdlibm/Makefile \
          src/Makefile \
          src/openvrml/Makefile \
          src/openvrml/OpenVRML/Makefile \
          src/openvrml-gl/Makefile \
          src/openvrml-gl/OpenVRML/Makefile \
          src/openvrml-gl/OpenVRML/GL/Makefile \
          src/lookat/Makefile \
          openvrml.spec)
