2001-10-17  S. K. Bose  <bose@pavan.barc.ernet.in>

        * Fixes for bug #213579. Problem on invariant background under
          all viewpoint transformations.

2001-10-17  Braden McDaniel  <braden@endoframe.com>

        * Use variables resolved by configure to tell Java where .class
          files and libraries are installed.

        * Fixed memory leak involving inappropriate use of freeze() with
          ostrstream in `ScriptJDK.cpp'.

        * Java .class files are nolonger installed by `make install'.

        * JNI headers are nolonger generated. (They aren't strictly
          required, and automake 1.5 has problems with generated sources
          that should be neither installed nor included in the
          distribution.)

        * Added checks for `javac' and `jar' to configure.

        * Changed `--with-jni' option to `--with-jdk'. 

2001-10-15  S. K. Bose  <bose@pavan.barc.ernet.in>

        * Add accumulateTransform after adding all nodes to Scene in
          "VrmlScene" to cache a pointer to ParentTransform. It is needed
          to calculate the inverse of transformation stack above
          Viewpoint node before rendering traversal starts.

        * Fix for Bug #226213 : Nested Viewpoint problem.

2001-10-15  S. K. Bose  <bose@pavan.barc.ernet.in>

        * Change method names in VrmlMatrix as ECMAScript VrmlMatrix
          definition.

        * Incorporated changes as suggested by Braden (Thanks to Braden)

        * As defined in ECMAScript definition, remove 
          "transform_to_matrix" method from VrmlNodeTransform node and
          put it in VrmlMatrix as "setTransform" method.

2001-10-15  Thomas Flynn <tflynn@users.sourceforge.net>

        * Implemented Task 24920 (Use a standard container for routes)

        * Fix core dumping problem with AudioClip's.

        * Backout of earlier, incorrect fix to Material node handling.

2001-10-12  Braden McDaniel  <braden@endoframe.com>

        * Replaced `configure.in' with `configure.ac'. We now require
          autoconf 2.52 for generating `configure'. The file
          `acconfig.h' (that was previously used to generate `config.h')
          is now obsolete.

        * Modifications to autoconf macros to reflect autoconf 2.52
          conventions.

        * The autoconf macro to find the JNI headers/libraries now uses
          $JAVA_HOME, and should reliably detect the Sun JDK on Linux.
          Additional work will need to be done to cover other JDKs and
          platforms.

        * Use preprocessor definitions determined by `configure' for
          including the SpiderMonkey header. This addresses the problem
          where Mozilla headers may occur in `${includedir}' or
          `${includedir}/mozilla'.

        * Use preprocessor definitions determined by `configure' for
          including the OpenGL/GLUT headers. Most platforms put these
          headers in `${includedir}/GL'; but Mac OS X puts them in
          `${includedir}/OpenGL' and `{includedir}/GLUT'.

2001-10-12  Braden McDaniel  <braden@endoframe.com>

        * A bit of finesse to get the ANTLR parser in an anonymous
          namespace in the VrmlScene implementation.

        * Put contents of the private headers in private namespaces:
          OpenVRML_ for libopenvrml and OpenVRML::GL_ for
          libopenvrml-gl.

        * Use our own constants for multiples of pi insteading depending
          on M_PI, etc. (which are non-standard).

2001-10-11  Braden McDaniel  <braden@endoframe.com>

        * Propagate events resulting from eventsProcessed().

2001-10-09 Thomas Flynn <tflynn@users.sourceforge.net>

	* Checkin fix for bug 210073.

2001-10-07  Braden McDaniel  <braden@endoframe.com>

        * Fixed a bug in SFVec3f construction in JavaScript.

2001-10-05 Thomas Flynn <tflynn@users.sourceforge.net>

	* Add java exception classes as specified in spec.

	* Add javadoc comments to some classes.

	* Update all java classes to match spec. (throw exceptions as
	  needed, add toString to subclasses, implement Cloneable where
	  required) 

	* Add clone method to VrmlEvent.h

	* Major updates to ScriptJDK.cpp. Add event propagation of eventOut
	  fields (except for SFNode and MFNode). Implement most toString
	  methods. Add any missing methods found in javah output.
	  Other misc. changes.

2001-10-04 S. K. Bose  <bose@pavan.barc.ernet.in>

        * A New Class VrmlMatrix is implemented. Here the format
          is same as OpenGL standard. So this matrix can be used
          transparently as OpenGL matrix.

        * All matrix operations in core (some in gl) are replaced
          by objects of this class.

        * In "Transformation node" set and unsetTransform are replaced
          by its own calculated transformation matrix for improving
          performance.

        * In "Billboard node", the transformation matrix is 
          calculated in core by using modelview matrix accumulated
          during render traversal. So this transformation matrix is
          also accumulated in modelview matrix.

        * For calculating local coord. from world coord. in sensor
          nodes (PlaneSensor, CylinderSensor and SphereSensor) during
          activation, the accumulated transformation matrix is used.
          Though by this "DEF/USE" problem is not solved unless 
          someday "Ray based picking" is implemented. 

        * Fix for bug #230460 
          
2001-09-27 Thomas Flynn <tflynn@users.sourceforge.net>

	* Update VrmlNodeScript::addToScene to use std::string instead of
	  char*.

	* Cleanups to VrmlNodeScript.cpp from Henri Manson.

2001-09-20  S. K. Bose  <bose@pavan.barc.ernet.in>

        * If all "iostreams" are converted to standard "iostreams" 
          template classes (STL) that manipulate standard streams,then 
          it gives error in constructor of "ifstream" class (doc2.cpp)
          "no appropriate default constructor available" (Is this 
          problem with VC6++ STL ?). To get rid of this, "c_str()" of
          std::string is used where this string is directed to iostreams.

        * Fix other compile problems for WIN32 port.

        * Applied patch #446396 from Henri Manson to include "ScriptJDK" 
          into the WIN32 build.

2001-09-16 Thomas Flynn <tflynn@users.sourceforge.net>

	* Add missing class (Event.java) into the build.

2001-09-12 Thomas Flynn <tflynn@users.sourceforge.net>

	* Add getFieldType to field.h/.cpp from Henri Manson's patch.

	* Implement insert/remove element methods in VrmlMFString
	  and VrmlMFNode.

	* Fix compile problem with VrmlEvent.h

	* Add java support classes to the build.

	* Add macro to enable/disable java in the script node support.

	* Update makefiles to add java include and library paths.

	* Update configure.in to check for java support.

	* General updates/fixes for ScriptJDK.cpp

2001-09-08 Thomas Flynn <tflynn@users.sourceforge.net>

	* Applied most of patch #446376 from Henri Manson for Java
	  in the Script node support.

2001-09-06  Braden McDaniel  <braden@endoframe.com>

        * Applied patch from Luca Regini <lucaregini@libero.it> to
          implement getChildren() for VrmlNodeProto.

2001-09-04  S. K. Bose  <bose@pavan.barc.ernet.in>

        * Fixed Navigation problems in "Examine Mode", as it was
          mentioned in <http://groups.yahoo.com/group/libvrml97/message/1451>

        * Fixed some issues for bug #447971 (Navigation problems)

        * Fix for bug #213579 (Backgrounds appear to move)

        * Fix for bug #213970 (Headlight doesn't follow Viewpoint)

        * Fix for shininess component in Material node.

        * Fix for getOrientation(). In some cases it was failing.
 
2001-08-31  Braden McDaniel  <braden@endoframe.com>

        * Removed VrmlNode::toProto() method; use dynamic_cast instead.

2001-08-30  Thomas Flynn <tflynn@users.sourceforge.net>

	* Add insert/remove Element methods to all VrmlMF* types.

2001-08-25  Thomas Flynn <tflynn@users.sourceforge.net>

	* Add licensing information to java support files.

2001-08-23  Braden McDaniel  <braden@endoframe.com>

        * Some minor cleanup of VrmlScene.

        * Changed name of "VrmlNodeType" class to "NodeType".

        * Use a refcounting smart pointer for NodeTypes.

        * Changed NodeType::getName() to ::getId().

2001-08-22  Thomas Flynn <tflynn@users.sourceforge.net>

	* Fixed typo in README.

	* Add ScriptJDK back into the build.

	* Use OPENVRML_HAVE_JAVA instead of HAVE_JDK.

	* Update ScriptJDK code to use std::string. 

2001-08-22  Braden McDaniel  <braden@endoframe.com>

        * Fixed crash in VrmlScene::readPROTO().

        * Fixed event value propagation problem in VrmlNode::eventIn()
          (introduced in transition to std::string).

2001-08-19  Braden McDaniel  <braden@endoframe.com>

        * Added getChildren() method to VrmlNode; implemented this for
          everything except VrmlNodeProto.

        * Changed VrmlNode::setName() and ::getName() to setId() and
          getId().

2001-08-16  Braden McDaniel  <braden@endoframe.com>

        * Changed reinterpret_casts in the JavaScript binding to
          static_casts.

2001-08-13  Braden McDaniel  <braden@endoframe.com>

        * Changed most uses of char * to std::string.

2001-08-09  Braden McDaniel  <braden@endoframe.com>

        * Changed JavaScript binding to use a wrapper class to track
          meta-data about values corresponding to Script node fields/
          eventOuts, rather than storing this data as properties on the
          JavaScript objects.

        * Minor const-correctness changed to ScriptObject::activate().

        * Changed VrmlMFNode implementation to use std::vector<>.

2001-08-08  Braden McDaniel  <braden@endoframe.com>

        * VrmlScene now stores the root nodes as a VrmlMFNode rather than
          a Group node.

2001-08-06 Thomas Flynn <tflynn@users.sourceforge.net>

	* Initial checkin for Java in the Script node support.
	  From patch submitted by Henri Manson.

2001-08-04  Braden McDaniel  <braden@endoframe.com>

        * Fixed minor bug in MFInt32::setElement() in the JavaScript
          binding.

2001-07-30  Braden McDaniel  <braden@endoframe.com>

        * Removed obsolete #undef's in `acconfig.h'.

        * Added private macro for outputting exception messages in debug
          mode.

        * Changed Viewer's constructor to take a VrmlScene reference
          rather than a pointer.

2001-07-24  Braden McDaniel  <braden@endoframe.com>

        * Added Joerg Scheurich's warbird game to the sample worlds.

2001-07-18  S. K. Bose  <bose@pavan.barc.ernet.in>

        * Win32 GL declarations are taken out from 
          ViewerOpenGL.h and put it into ViewerOpenGL.cpp

2001-07-14  Braden McDaniel  <braden@endoframe.com>

        * Fixed a bug in the JavaScript binding where
          createVrmlFieldFromJsval would create a VrmlSFFloat when it
          should have been creating a VrmlSFTime.

2001-06-30  Braden McDaniel  <braden@endoframe.com>

        * Changed SFRotations to require that their axis component must
          be a unit vector. This change was incompatible with write
          access using operator[]; both read and write access using
          operator[] with VrmlSFRotation has been eliminated.

2001-06-29  Braden McDaniel <braden@endoframe.com>

        * Added ommitted class initializations for the MFString and MFTime
          JavaScript types.

2001-06-25  Braden McDaniel <braden@endoframe.com>

        * Moved ScriptObject's factory method from the static method on
          ScriptObject to a private method of VrmlNodeScript. This
          serves to clean up the ScriptObject interface. In conjunction
          with this change, the JavaScript binding code has been moved
          from `ScriptObject.cpp' to `VrmlNodeScript.cpp'.

2001-06-24  Braden McDaniel <braden@endoframe.com>

        * Added a private header `private.h' for macros used in the
          implementation.

        * Got rid of the pre-linking step for libantlr. Now we just
          import all of libantlr's library objects into the libopenvrml.
          We could be a bit more judicious about this, but libantlr
          needs to be refactored before we can see a significant size
          savings.

        * In the JavaScript Script class, got rid of instance variables
          for the global object and the Browser object. The latter was
          never used; the former can be obtained from the context.

2001-06-20  Braden McDaniel <braden@endoframe.com>

        * In the JavaScript API implementation, store the pointer to the
          Script object as private data in the JSContext rather than as
          a property of the global object.

        * Use JS_NewRuntime() and JS_DestroyRuntime() instead of the
          deprecated JS_Init() and JS_Finish() functions.

        * Factored means of constructing a VrmlField type from its
          corresponding JavaScript class into separate per-type
          functions.

2001-06-20  S. K. Bose  <bose@pavan.barc.ernet.in>

        * Update *.dsp and *.dsw to support OpenVRML WIN32 DLL and
          remove libjs.dsp and libjs.dsw as these are no longer
          needed. ANTLR parser generator is no longer needed as this 
          will use the generated sources which come with the 
          distribution.

        * Update Makefiles for windows to support WIN32 DLLs and
          made javascript support, PNG image support and JPEG image
          support optional. 

2001-06-12  Braden McDaniel <braden@endoframe.com>

        * Use `std::map<>::value_type *' instead of
          `std::map<>::pointer' in VrmlNodePtr.h. Removed #ifdef for
          Win32.

2001-06-15  S. K. Bose  <bose@pavan.barc.ernet.in>

        * Fixed problems for "using-declaration" in ScriptObject.cpp.

2001-06-14  S. K. Bose  <bose@pavan.barc.ernet.in>

        * Fixes for object construction in several places in 
          vrml97node.cpp, VrmlScene.cpp, VrmlNodeType.cpp and
          VrmlNodeScript.cpp. MSVC++6.0 does not like the way it was.

        * Fixed type mismatch in VrmlNodeProto.cpp and VrmlNodeProto.h

2001-06-13  S. K. Bose  <bose@pavan.barc.ernet.in>

        * In "VrmlNodePtr.h" as "pointer" is not a member of std::map 
          (though it is in standard) in containers library of MSVC++6.0,
          "value_type" can be used (it is also in standard). Though 
          I have used "WIN32" preprocessing directive for making 
          equivalent of "countPtr", but I hope this will work for other 
          compiler as well.
 
2001-06-12  Braden McDaniel <braden@endoframe.com>

        * Used classes and namespaces to organize functions in the
          JavaScript binding.

        * Changed implementation of JavaScript MF* types so that they
          nolonger depend on the JavaScript Array class. (This
          eliminates our dependency on the private JS header.)

        * Moved JavaScript binding implementation to ScriptObject.cpp.
          (None of the JavaScript binding needs to be part of the public
          API.)

2001-06-10  S. K. Bose  <bose@pavan.barc.ernet.in>

        * Fixed macros in *.h to support WIN32 DLLs

2001-06-08  Braden McDaniel <braden@endoframe.com>

        * If it's available, use the STL hash_map rather than std::map
          in VrmlNodePtr.

2001-06-07  Braden McDaniel <braden@endoframe.com>

        * Replaced SimpleVector in the parser with std::vector.

        * Moved Vrml97Scanner implementation to Vrml97Parser.g.

2001-06-06  Braden McDaniel <braden@endoframe.com>

        * Made PNG support (libpng) optional.

        * Made JPEG support (libjpeg) optional.

2001-05-27  Braden McDaniel <braden@endoframe.com>

        * Improvements (mostly cosmetic) to the Script node JavaScript
          API implementation. Use of namespaces to improve clarity of
          organization.

2001-05-23  Michael Louka <michael.louka@hrp.no>

        * Updated ViewerOpenGL.cpp, ViewerGlut.cpp, and lookat.cpp
	  to compile on Mac OS X.

2001-05-23  Braden McDaniel <braden@endoframe.com>

        * Fixed crash on exit; don't call initialize() for a Script node
          with a null scene pointer.

2001-05-22  Braden McDaniel <braden@endoframe.com>

        * Added macros to support building Win32 DLLs.

2001-05-20  Braden McDaniel <braden@endoframe.com>

        * Fixed a crash when printing NULL SFNodes.

        * Some minor cleanup of ScriptObject.

        * JavaScript SFNode constructor now fails if the vrmlstring
          argument does not produce exactly one node.

2001-05-19  Braden McDaniel <braden@endoframe.com>

        * Made all single-argument constructors for field classes
          "explicit".

        * Fixed crash when loading a world with a Script node SFNode field
          initialized to NULL.

2001-05-09  Braden McDaniel <braden@endoframe.com>

        * Fixed problem with PROTO instantiation where exposedFields
          were not handled correctly. (Patch from
          <jpw20@users.sourceforge.net>.)

        * Fixed problem when calling getField() on a PROTO to get the
          value of a field that had not had its default value
          overridden. findField() now returns the default value in this
          case. Fixes bug #229687:
          
          <http://sourceforge.net/tracker/index.php?func=detail&aid=229687&group_id=7151&atid=107151>
          
          (Patch from <jpw20@users.sourceforge.net>.)

        * Fix for bug #414259:
          
          <http://sourceforge.net/tracker/index.php?func=detail&aid=414259&group_id=7151&atid=107151>
          
          (Patch from <jpw20@users.sourceforge.net>.)

2001-05-01  Braden McDaniel <braden@endoframe.com>

        * Doxygen comments and cosmetic adjustments to VrmlNodeType.

2001-04-26  Braden McDaniel <braden@endoframe.com>

        * Added Doxygen comments for VrmlNodeChild.
        * Added Doxygen comments for VrmlNodeGeometry.
        * Added Doxygen comments for VrmlNodeLight.

2001-04-25  Braden McDaniel <braden@endoframe.com>

        * Applied patch from Joerg Scheurich
          <rusmufti@helpdesk.rus.uni-stuttgart.de> to accommodate
          higher-resolution textures in the Background node.

2001-04-24  Braden McDaniel <braden@endoframe.com>

        * Consolidated VRML97 node types in a single header and a single
          implementation file.

2001-04-23  Braden McDaniel <braden@endoframe.com>

        * Consolidated SF* and MF* types into a single header, `field.h'.

2001-04-12  Thomas Flynn <tflynn@users.sourceforge.net>
        * Checked in fixes for bugs 210011, 211349 and 407708.
          Updated conformance testing results.

2001-02-16  Braden McDaniel  <braden@endoframe.com>

        * Moved texture reading code to `Image.cpp'. This obsoletes the
          files:
            gifread.h
            gifread.cpp
            pngread.h
            pngread.cpp
            jpgread.h
            jpgread.cpp
            mpgread.h
            mpgread.cpp

2001-02-14  Braden McDaniel  <braden@endoframe.com>

        * Changed VrmlNode::eventIn() to take a reference to a VrmlField
          rather than a pointer.

2001-02-06  Braden McDaniel  <braden@endoframe.com>

        * Fixed VrmlNodeGroup::removeChildren() to account for nulls in
          the MFNode array.

        * Fixed VrmlNodeGroup::recalcBSphere() to account for nulls in
          the MFNode array.

        * Changed VrmlMFNode::addNode() and ::removeNode() to take
          VrmlNode references (rather than pointers).

        * Changed VrmlNodeType::addNode() to take a VrmlNode reference
          (rather than a pointer).

        * In `VrmlNamespace.cpp', moved definitions of NodeCloneVisitor
          and NodeRouteCopyVisitor from inside the cloneNodes() method
          to an unnamed namespace at global scope. This fixes a weird
          problem with linking under egcs 1.1.2.

        * Changed erroneous dynamic_casts in NodeCloneVisitor and
          NodeRouteCopyVisitor to to[Node]() method calls.

2001-02-05  Braden McDaniel  <braden@endoframe.com>

        * Removed dynamic_cast in assertions in VrmlNodeAppearance's,
          VrmlNodeElevationGrid's, and VrmlNodeShape's setters in favor
          of toNode() methods.

        * Fixed problem with accumulateTransform() in VrmlNodeBillboard
          and VrmlNodeTransform where a null pointer could potentially
          be dereferenced.

        * Added VrmlNode::toBillboard() and ::toCollision() methods.

        * Removed size(), child() and getChildren() methods from
          VrmlNodeGroup; these are obsoleted by the getChildren()
          method.

2001-01-29 Michael Louka  <michael.louka@hrp.no>

        * For Mac OS only: Updated System.cpp to removed dependency on
          DriverServices system library. Updated Lookat.mcp and
          Lookat.mcp.xml to support this update.

2001-01-28  Braden McDaniel  <braden@endoframe.com>

        * Changed VrmlNodeType and VrmlNodeProto to hold their
          implementation nodes as a VrmlMFNode object, rather than a
          pointer to a VrmlMFNode. (Since a PROTO *must* have at least
          one node in its implementation, we can tell whether the
          implementation has been retrieved by the length of the
          VrmlMFNode object.)

        * Added a visitor class for the node hierarchy, VrmlNodeVisitor.

        * Reimplemented node cloning using a visitor. This cleans up
          the VrmlNode API a bit.

2001-01-27  Braden McDaniel  <braden@endoframe.com>

        * Changed VrmlNodeProto::getNodes() to return a VrmlMFNode
          reference (instead of a pointer).

        * Added accessors to VrmlNodeSwitch.

        * Added accessors for source to VrmlNodeSound.

        * Added accessors for fontStyle to VrmlNodeText.

2001-01-24  Braden McDaniel  <braden@endoframe.com>

        * Changed VrmlNodeScript copy ctor to call VrmlNodeChild copy
          ctor.

2001-01-23  Braden McDaniel  <braden@endoframe.com>

        * Added getters/setters to VrmlNodeIndexedSet.

        * Added getter/setter for level to VrmlNodeLOD.

        * Added getters/setters to VrmlNodePointSet.

        * Include <stddef.h> from `Viewer.h'.

2001-01-22  Braden McDaniel  <braden@endoframe.com>

        * Added SFNode field getters/setters to VrmlNodeIFaceSet.

2001-01-21  Braden McDaniel  <braden@endoframe.com>

        * Moved definition of Route from VrmlNode.* to its own
          implementation and header files.

        * Moved VrmlNode Doxygen comments to implementation file.

        * Added getter/setter methods to VrmlNodeAppearance.

        * Moved VrmlNodeChild implementation into its own file (from
          `VrmlNode.cpp'); added copy ctor.

        * Broke VrmlNode::toChild() into const and non-const versions.

        * Added getter/setter for proxy on VrmlNodeCollision.

        * Added getters/setters for VrmlNodeElevationGrid.

        * Added getter/setter for children on VrmlNodeGroup.

2001-01-20  Braden McDaniel  <braden@endoframe.com>

        * Added getRoutes() method to VrmlNode, per patch from Joe
          HerdMan.

2001-01-19  Braden McDaniel  <braden@endoframe.com>

        * Fixed misidentified token ID constant in `Vrml97Scanner.cpp'.
          Due to a typo, the identifiers for SFColor and MFColor had
          been given the same value. Thanks to Tom Flynn for reporting
          the bug.

2001-01-14  S. K. Bose  <bose@pavan.barc.ernet.in>

        * Update Makefiles, Project files and Workspace files to build
          (WIN32) for new OpenVRML structure.

        * Fixed undefined symbol problems while making "lookat" in
          debug mode using microsoft DevStudio.

2001-01-10  Michael Louka <Michael.Louka@hrp.no>

        * Updated CodeWarrior 5.x files for Macintosh for new
          OpenVRML structure.

2001-01-10  Braden McDaniel  <braden@endoframe.com>

        * Fixed something gcc shouldn't have allowed me to compile in
          PixelTexture rescaling. (I was trying to allocate an an array
          on the stack with a size that wasn't a const-expression.)

        * Reverted VrmlMFString's member to "char * *" from
          "const char * *". Visual C++ apparently has problems deleting
          const objects. Not sure what the standard has to say about
          this. After some reflection, this change is probably the Right
          Thing anyway. Stylistically, at the very least, deleting a
          const object would seem to be Bad.

        * Added include of <assert.h> to `ScriptJS.cpp'.

        * Added include of <assert.h> to `VrmlNodeScript.cpp'.

2001-01-03  Braden McDaniel  <braden@endoframe.com>

        * Removed single-value constructor from VrmlMF*. It is
          unnecessary since the array constructor can be used with a
          single value, and with types like VrmlMFFloat, VrmlMFTime,
          and especially VrmlMFInt32, it has the potential to create
          ambiguous code since the array constructor can be used with
          a single value as well (to indicate the number of values the
          new object should hold).

        * Fixed a minor bug with the default Extrusion.

2001-01-01  Braden McDaniel  <braden@endoframe.com>

        * Doxygen comments for VrmlMFTime, VrmlMFVec2f, and VrmlMFVec3f.
        
        * Added setLength() method to VrmlMFTime.
        
        * Added setLength() method to VrmlSFVec2f; consolidated default
          constructor.
        
        * Added setLength() method to VrmlSFVec3f; consolidated default
          constructor; removed non-const get() method.

2000-12-31  Braden McDaniel  <braden@endoframe.com>

        * VrmlMFRotation API improvements: moved refcounted inner class
          to implementation file; added setLength() method.

2000-12-30  Braden McDaniel  <braden@endoframe.com>

        * API improvements to VrmlMFNode: added const version of
          operator[] and a non-const version that can be used as an
          l-value; added setLength method; made addNode and removeNode
          return bool to indicate the success or failure of the
          operation.

        * Changed semantics for VrmlMFNode::addNode() and
          ::removeNode(). These methods nolonger add or remove NULLs.
          This trickles up to the addChildren and removeChildren
          operation on grouping nodes, which will nolonger add or remove
          NULLs as well.

        * Fixed a bug in VrmlMFNode::removeNode() that caused the wrong
          node to be dereferenced.

2000-12-18  Braden McDaniel  <braden@endoframe.com>

        * Const-correctness changes to Viewer and ViewerOpenGL.

        * Declare GLUtesselator `extern "C"' in `ViewerOpenGL.h'.

        * Added configuration file to generate documentation with
          Doxygen.

2000-12-17  Braden McDaniel  <braden@endoframe.com>

        * Updated ANTLR library version to 2.7.1.

        * Changed VrmlSFInt and VrmlMFInt class names to VrmlSFInt32
          and VrmlMFInt32. These were the only field class names that
          weren't consistent with the VRML97 field type names.

2000-12-14  Braden McDaniel  <braden@endoframe.com>

        * API cleanup and improvements to VrmlSFColor, VrmlSFRotation,
          VrmlSFVec2f, VrmlSFVec3f.

        * Added configure option to disable JavaScript support.

2000-12-12  Braden McDaniel  <braden@endoframe.com>

        * API improvements (including const-correctness) to VrmlSFVec3f and
          VrmlSFRotation. Changed semantics for methods to match those of the
          ECMAScript binding.

        * Implemented VrmlSFRotation::slerp().

2000-12-10  Braden McDaniel  <braden@endoframe.com>

        * Const-correctness changes to VrmlSFImage. Broad ramifications.
          Importantly, we now must copy the image before rescaling it in
          the ViewerOpenGL. This is less efficient, but rescaling should
          only happen once, so I doubt the copy will be too big of a
          deal.

2000-12-09  Braden McDaniel  <braden@endoframe.com>

        * Changed type used to represent SFInt32 and MFInt32 from int to
          long.

        * Miscellaneous const- and signed-correctness changes.

2000-12-08  Braden McDaniel  <braden@endoframe.com>

        * Fixed viewpoint cockeyed-ness introduced by patch on 6 Dec.

        * Changed name of `libvrml97' to `libopenvrml'.

        * Changed installation location for libopenvrml headers to
          `$(includedir)/OpenVRML'.

        * Changed name of `libvrml97gl' to `libopenvrml-gl'.

        * Changed installation location for libopenvrml-gl headers to
          `$(includedir)/OpenVRML/GL'.

2000-12-06  Braden McDaniel  <braden@endoframe.com>

        * Applied patch to fix
          
          <http://sourceforge.net/bugs/?func=detailbug&bug_id=124439&group_id=7151>
          
          This adds identification of hexadecimal integers to the lexer,
          and removes use of istrstream from the parser.

        * Since Script nodes are nolonger detected in the scanner, removed
          NODE_SCRIPT identifier.

2000-12-05  Braden McDaniel  <braden@endoframe.com>

        * Reverted 26 Nov change to VrmlField.h. CodeWarrior 5/Mac is
          using ISO IOstreams, and had problems with the forward
          declaration.

2000-11-28  Braden McDaniel  <braden@endoframe.com>

        * Applied patch to lookat from Jeff Dubrule <igor@pobox.com> to prefer
          viewpoint descriptions to DEF names in the viewpoint menu.

2000-11-27  Braden McDaniel  <braden@endoframe.com>

        * Got rid of confusing VrmlSField and VrmlMField #defines in
          VrmlField.h.

2000-11-26  Braden McDaniel  <braden@endoframe.com>

        * Replaced include of <iostream.h> in VrmlField.h with a forward
          declaration of ostream.

2000-11-23  Braden McDaniel  <braden@endoframe.com>

        * Corrected (and changed implementation of) VrmlField::fieldTypeName();
          changed implemetation of VrmlField::fieldType(const char *). Thanks to
          Jeff Dubrule <igor@pobox.com> for noting the problem with
          VrmlField::fieldTypeName().

2000-11-18  Braden McDaniel  <braden@endoframe.com>

        * Backported the patch to Mozilla bug 24892.  We should nolonger need
          special CFLAGS to compile JavaScript under Red Hat 7.0. This fixes
          <http://sourceforge.net/bugs/?func=detailbug&bug_id=122654&group_id=7151>

2000-11-17  Braden McDaniel  <braden@endoframe.com>

        * Made the parser, scanner, and ANTLR headers non-public.

        * Upgraded JavaScript to 1.5RC2.

        * Added another tryURLs method to Image:
          
            bool tryURLs(const VrmlMFString & urls, Doc2 * relative = 0);
          
          This was needed as there is currently no reliable way to get the
          char** to the 2D array of strings out of VrmlMFString.  This fixes
          <http://sourceforge.net/bugs/?func=detailbug&bug_id=116908&group_id=7151>.

        * Cleaned up warnings in VrmlNodeAnchor.cpp.

        * In the parser, the value passed to VrmlMFColor for the number of color
          values was off by 1/3. This fixes
          <http://sourceforge.net/bugs/?func=detailbug&bug_id=122340&group_id=7151>

2000-11-16  S. K. Bose <bose@pavan.barc.ernet.in>
        
        * Changes in Makefile.win to include conditional generation
          of C++ code from ANTLR grammar by having java or not.

2000-11-07  Braden McDaniel  <braden@endoframe.com>

        * Took the ANTLR source out of the automated build.

2000-11-03  Braden McDaniel  <braden@endoframe.com>

        * Changed the character variables in the Vrml97Utf8Scanner from char to
          int, since char_traits<T>::eof is an int_type, and EOF is typically
          an int.

2000-10-26  Braden McDaniel  <braden@endoframe.com>

        * Modified ANTLR's config.cpp to define NO_STATIC_CONSTS for gcc 2.96.
          This fixes <http://sourceforge.net/bugs/?func=detailbug&bug_id=117652&group_id=7151>.
        
        * In configure.in, disabled the ability to disable building static
          libraries. We need them to incrementally link against, even when the
          only desired end product are shared libraries.

2000-10-24  Braden McDaniel  <braden@endoframe.com>

        * Unified typedef for Win32 and non-Win32 for TessCB in
          ViewerOpenGL.cpp.
        
        * Removed gcc-specific compiler flags from JavaScript's Makefile.am.

2000-10-15  Braden McDaniel  <braden@endoframe.com>

        * Took out the #ifdef around including <string.h> in System.cpp. It
          should be safe to include this everywhere, and now gcc wants it there
          on Linux.

2000-09-21  Chris Morley  <cmorley@vermontel.net>

	* Applied (the gist of) patches submitted by Bose, tflynn, and
	Jean-Daniel Fekete for VrmlNamespace invalid memory access,
	mpeg playback speed fix, and Cygwin support, respectively.

2000-09-09  Christopher St. John <cstjohn@acm.org>

	* vrml97parser.g fixed the intValue production. It was not
	correctly parsing hex values starting with "0x". Generally not a
	good idea to use iostreams as a lexer, its too error prone. Also
	fixed the sfImageValue production, it was not correctly unpacking
	longs into the byte array that a pixel texture expects. 

	* VrmlField.cpp fixed VrmlSFImage constructors to take the "num
	components" specification into account when computing the length
	of the image byte array, to go with the parser fix above. Taken
	together, these changes appear to fix bug # 109949.

	* VrmlSFImage.h added javadoc style comments detailing the way
	nComponents interacts with how the image byte array is
	interpreted.

	* VrmlNodePixelTexture.cpp commented out some debug messages.

2000-09-05  Christopher St. John <cstjohn@acm.org>

	* gifread.cpp, jpgread.cpp, mpgread.cpp, pngread.cpp Modified to
	load textures using OpenGL convention of origin in lower left hand
	corner instead of upper left. Old image loader code used regular
	convention and then munged the texture coordinates to turn them
	back right side up, which led to non-conformant behavior when
	scaling using a texture transform node. (see bug# 109952) The
	fixes were easy, but what about 3rd party loaders?

	* ViewerOpenGL.cpp, Viewer.cpp Changed the texture coordinate
	generation code to match the new loader code. Fixes also improve
	(but maybe don't totally fix) several other texture coord problems
	including bug #'s 110035, 111335, 111343.
	
2000-08-27  Christopher St. John <cstjohn@acm.org>

	* ViewerOpenGL.cpp Changed the default zfar in setViewpoint()
	from 1000 to 30,000. This helps with, but doesn't really properly
	fix, conformance bugs #'s 111350, 111338, 111339, 111340. It might
	also cause problems with z-precision, likely to show up as
	z-fighting, but it seems worth a shot.

2000-08-19  Christopher St. John <cstjohn@acm.org>

	* ViewerOpenGL.cpp Fixed a problem with the check for non -1
	terminated coord indicies in insertShellConvex(), and (partially)
	fixed a problem with normal generation in insertCone(), ref
	bug#112324

2000-08-02  Christopher St. John <cstjohn@acm.org>

	* VrmlNodePlaneSensor.cpp, VrmlNodePlaneSensor.h Added cache of
	inverse transform in case manipulation of plane sensor modifies
	the transform hierarchy above the plane sensor. Fixes bug #108126.

2000-06-28  Chris Morley  <cmorley@vermontel.net>

	* Change license to LGPL for library code.

	* Added mgiger's SphereSensor implementation and 
	  CylinderSensor stubs.

2000-06-27  Braden McDaniel  <braden@endoframe.com>

        * Eliminated dependency on the GL header files from ViewerOpenGL.h.
	  (Note that ViewerOpenGL still depends on these headers, of course.)
	
	* Moved dependency on zlib.h from Doc.h to Doc.cpp.
	
	* Changed autoconf macro prefix to 'OV'.
	
	* Removed libvrml97js check from AM_PATH_VRML.
	
	* Removed dependency on zlib, libpng, libjpeg, and GL from AM_PATH_VRML
	  and AM_PATH_VRMLGL. The dependencies in the headers has been
	  eliminated, and since we're using libtool inter-library dependencies
	  are automatically taken care of.

2000-06-27  Michael Louka <Michael.Louka@hrp.no>

  * Updated CodeWarrior files for Mac OS to reflect Braden's changes to
    the handling of the JavaScript library.

2000-06-27  Michael Louka <Michael.Louka@hrp.no>

  * Rewrote VrmlNodeAnchor::activate() so that relative URLs to non-VRML
    data are handled correctly.
    
2000-06-27  Braden McDaniel <braden@endoframe.com>

        * Changed build scripts to use JavaScript 1.5 RC1 (SpiderMonkey).
	  Importantly, it's being built a little differently from before.
	  libvrml97js is now obsolete. libvrml97core is now pre-linked against
	  libjs (and its subordinate fdlibm).
	  
	  Finally, dependencies in the libvrml97 headers upon the libjs headers
	  were eliminated: we nolonger have to install the libjs headers. (yea!)
	  So, note to future JS hackers: let's try to keep it that way.

2000-06-22  Christopher St. John <cstjohn@acm.org>

	* vrml97parser.g There was a case missed in
	protoScriptFieldInterfaceDeclaration where a field followed by an
	IS wasn't having addField() called on it.

	* vrml97parser.g, vrml97scanner.cpp, vrml97scanner.h Moved
	identification of Script nodes from the scanner into the
	parser. It was very difficult to identify all the cases where a
	SCRIPT-token (rather than a normal ID token) should be returned
	when the string "Script" was encountered, and the missing cases
	were causing parse problems.

	* VrmlScene.cpp reordered initializations in ctr to silence
	compiler warning.

2000-06-18  Christopher St. John <cstjohn@acm.org>

	* Added default values for x/zDimension in VrmlNodeElevationGrid ctr

2000-06-15  Christopher St. John <cstjohn@acm.org>

	* Added isOver eventout to defineType in VrmlNodeTouchSensor.cpp
	* Removed debug message from VrmlNodeSwitch.cpp

2000-05-20 Christopher St. John <cstjohn@acm.org>

	* Added view frustum culling code, touched all VrmlNode*.{cpp/h} files
	* Fixed (badly, temporarily) navigation code in VrmlScene/ViewOpenGL

2000-04-19  Chris Morley  <cmorley@vermontel.net>

	* Added -title arg to lookat for multiple viewers under xswallow.

2000-04-11  Braden McDaniel  <braden@endoframe.com>
        
        * Added some infectious const lovin' with a dash of size_t. Too much
          to list. 
        
        * In VrmlMFString, removed the method:
        
            char ** getURL()
          
          This was redundant with the availability of
          
            virtual const VrmlMFString & getUrl() const;
            
2000-04-09  Michael Louka <Michael.Louka@hrp.no>

        * Modified System::time() for the Mac OS to provide VRML97 compliancy

2000-04-07  Braden McDaniel  <braden@endoframe.com>
        
        * The VrmlSFImage constructor was assuming ownership of the pixel array
          passed to it. This is inconsistent with the behavior of the similar
          constructors for MF* types, which copy the data in the buffer passed
          to them. I modified the VrmlSFImage constructor to instead make a copy
          of the pixel buffer passed to it.
          
          Also changed the constructor's signature from
          
            VrmlSFImage(int w = 0, int h = 0, int nc = 0, unsigned char * pixels = 0);
          
          to
          
            VrmlSFImage(int w = 0, int h = 0, int nc = 0, unsigned char const * pixels = 0);
        
        * Changed VrmlMFColor constructor from
          
            VrmlMFColor(int n, float * values);
          
          to
          
            VrmlMFColor(int n, float const * values);
          
        * Changed VrmlMFFloat constructor from
          
            VrmlMFFloat(int n, float * values);
          
          to
          
            VrmlMFFloat(int n, float const * values);
          
        * Changed VrmlMFInt constructor from
          
            VrmlMFInt(int n, int * values);
          
          to
          
            VrmlMFInt(int n, int const * values);
        
        * Changed VrmlMFRotation constructor from
          
            VrmlMFRotation(int n, float * values);
          
          to
          
            VrmlMFRotation(int n, float const * values);
        
        * Changed VrmlMFVec2f constructor from
          
            VrmlMFVec2f(int n, float * values);
          
          to
          
            VrmlMFVec2f(int n, float const * values);
        
        * Changed VrmlMFVec3f constructor from
          
            VrmlMFVec3f(int n, float * values);
          
          to
          
            VrmlMFVec3f(int n, float const * values);
        
2000-04-06  Braden McDaniel  <braden@endoframe.com>
        
        * Changed the signature of VrmlNode::nodeType from
          
            virtual NodeType * nodeType();
        
          to
        
            virtual NodeType & nodeType() const = 0;
          
          Previously, the default implementation returned 0. As this isn't
          really useful behavior, the method now returns a reference to the
          NodeType (cannot be null) and requires that concrete subclasses
          implement it.
        
2000-04-05  Chris Morley  <cmorley@vermontel.net>

	* Initial support for MPEG files in MovieTexture nodes.

2000-04-05  Braden McDaniel  <braden@endoframe.com>

        * Changed VrmlNamespace::findNode to a const method.

2000-04-03  Braden McDaniel  <braden@endoframe.com>

        * Beginning the process of replacing the SGI lex/yacc parser with an
          open source parser based on ANTLR.

        * Added MFTime field type.

        * Added a Doc2 class. This is a Doc work-alike, except Doc2 provides a
          C++ istream rather than a C file pointer for file access.

        * Modified the Doc class to interoperate with the Doc2 class.

        * Modified VrmlScene to use a Doc2 rather than a Doc. The new scanner
          (Vrml97Utf8Scanner) takes an istream as input.

2000-03-28  Braden McDaniel  <braden@endoframe.com>

        * Added libantlr to the build. The new parser will use this.

2000-03-28  Chris Morley  <cmorley@vermontel.net>

	* Added a -notitle arg to lookat so xswallow works again.

2000-03-26  Chris Morley  <cmorley@vermontel.net>

	* Finished implementing getField for Nodes so Scripts
	  can access exposedFields.

	* Fixed the upside down textures on some IFSs.

2000-03-13    <chris@quiller.morley.com>

	* Put in S K Bose's Billboard code and the MathUtils
	  for the axis-aligned bbox culling.

	* Fixed the last reported crashes with the NIST tests
	  (invalid VrmlNamespace references by EXTERNPROTOs).

2000-03-11  Braden McDaniel  <braden@endoframe.com>

        * Named the render mode enumerant in Viewer;
          Viewer::getRenderMode() now returns RenderMode. Static type
          checking is cool.

2000-03-10  Chris Morley  <cmorley@vermontel.net>

	* Add a Viewpoints menu on the right mouse button.
	Navigation is so broken right now.

	* Define VrmlNodeNavigationInfo::getField.
	
	* Make createVrmlFromUrl a little more robust
	(don't crash if no valid vrml nodes are read).

2000-03-09  Chris Morley  <cmorley@vermontel.net>

	* Ensure that lighting is turned back on when rendering Appearance nodes,
	so not all geometry following a missing Material node is unlit (problem
	reported by Michael Louka).

2000-03-09  Chris Morley  <cmorley@vermontel.net>

	* Fix elevationGrid color/normal per vertex.

2000-03-08  Chris Morley  <cmorley@vermontel.net>

	* Don't attempt to render null strings. Duh.

2000-03-07  Braden McDaniel <braden@endoframe.com>
        * Made Viewer's protected member functions computeCylinder,
          computeExtrusion, computeSphere, and computeView all static, as there
          seems no reason for them not to be.

2000-03-07  Chris Morley  <cmorley@vermontel.net>

	* Apply textures to cone and cylinder tops & bottoms.

2000-01-23  Braden McDaniel <braden@endoframe.com>

        * Patch from Stuart Anderson <anderson@metrolink.com> applied to lookat
          to correct floating point handling on FreeBSD.

2000-01-21  Braden McDaniel <braden@endoframe.com>

        * JavaScript 1.5 beta 1 has been added to the project and incorporated
          into the GNU build, replacing the Arbitrary CVS Snapshot that had been
          in use.

2000-01-19  S. K. Bose <bose@pavan.barc.ernet.in>

        * Incorporated additions in System.cpp to support "http" under windows 
	  and also replaced "System::" with "theSystem->" to support virtual 
          function-call mechanism.
 
2000-01-16  Braden McDaniel <braden@endoframe.com>

        * Submissions from S. K. Bose <bose@pavan.barc.ernet.in>: Added "std::"
          in a number of places where it was needed, as well as conditional
          inclusion of the file "winconfig.h" (which now resides in
          libvrml97core/win32) for the MS Visual C++ Windows build.

2000-01-03  Braden McDaniel <braden@endoframe.com>

        * In lbvrml97core, changed the toString() function in ScriptJS.cpp to
          use the standard, cross-platform means of freeing the buffer required
          by the ostrstream. Squashing #ifdefs gives me warm fuzzies.

1999-12-14  Michael N. Louka <michael.louka@hrp.no>

        * Now tests HAVE_SOUND in Audio::setURL() to check whether to load audio
          files. Previously audio files were (down)loaded even if HAVE_SOUND was
          not true.
          
        * Suppressed "couldn't read AudioClip from URL" error message in
          VrmlNodeAudioClip::update() if HAVE_SOUND is not true.

1999-12-03  Michael N. Louka <michael.louka@hrp.no>

        * Incorporated modifications to support Mac OS 8/9. This was mainly additions
          to System.cpp and Doc.cpp as well as some Macintosh specific header file
          inclusions and other minor modifications to other files.
          
        * Added CodeWarrior projects for Mac OS (in macos directories for lookat and
          libvrml97core).
          
        * Added HAVE_CONFIG_H checks to a number of files that were missing them.

        * Replaced output to stderr with output via theSystem in setURL() in Audio.cpp        

1999-11-21  Braden McDaniel <braden@endoframe.com>

        * Cleaned up some old #ifdefs in VrmlScene.cpp, Image.cpp, pngread.c,
          and jpgread.c that would have prevented images and gzipped files from
          working.

1999-10-19  Braden McDaniel <braden@endoframe.com>

        * Displaced lookat, xmlookat, and gtklookat to their own packages. This
          removed these files from libvrml97core:
          
          lookat.cpp
          ViewerGlut.cpp
          ViewerGlut.h
          ViewerXt.cpp
          ViewerXt.h
          ViewerXm.h
          gtklookat.cpp
          ViewerGtk.cpp
          ViewerGtk.h
          gtkglarea.c
          gtkglarea.h
          gdkgl.c
          gdkgl.h
          
          This eliminated dependence on X, Motif, and GTK+ from the build.

        * Displaced ViewerOpenGL.* and OpenGLEvent.* to libvrml97gl, eliminating
          dependence on OpenGL and glut.

        * Removed ViewerHOOPS.* and HOOPSEvent.*. These could potentially be
          made into their own package and provide an alternative to the OpenGL
          renderer.
        
        * Displaced plugin to its own package.

        * Removed win32Lookat. This, too, belongs in its own package. But I'll
          leave the specifics of that package to the Win32 developers.
        
        * Removed the javascript subtree and added a newer version of libjs to
          src/vrml97/libjs, and incorporated it into the automake build.

        * Nuked the OLD directory. These build scripts certainly would need a
          good deal of reworking after the reorg I've done, and hopefully the
          use of automake means they are nolonger necessary. If anyone needs
          they can be found in an older tarball.

1999-10-17  Braden N. McDaniel  <braden@endoframe.com>

        * OpenGL renderer displaced from libvrml97core and placed in
          libvrml97gl.

        * Helper functions from MathHelper.cpp in libvrml97core placed in an
          unnamed namespace in ViewerOpenGL.cpp.

	* OpenGLEvent.c renamed to OpenGLEvent.cpp

