You need to install Microsoft Visual C++ version 6.0 or later. If you 
want to use nmake utility that came with it, make sure that you have 
set up the compiler using vcvars32.bat script that came with it.

1) For making OpenVRML What else do I need?

  OpenVRML requires regex, zlib (optional), OpenGL/Mesa (optional), 
  GLUT (optional), libpng (optional),libjpeg (optional), 
  mozilla javascript (optional), Sun java SDK (optional)and 
  antlr(optional) to build. 
 
    regex:    <http://people.delphiforums.com/gic/hs_regex.html> 
    zlib:     <http://www.gzip.org/zlib/index.html>
    libpng:   <http://www.libpng.org/pub/png/libpng.html>
    libjpeg:  <http://www.ijg.org>
    js32:     <http://www.mozilla.org>
    jvm:      <http://java.sun.com/j2se>
    Mesa:     <http://mesa3d.org>
    GLUT:     <http://opengl.org/developers/documentation/glut/index.html>
    antlr:    <http://antlr.org>

  *NOTE: Using zlib I have problem with undefined symbol "errno" while 
   linking. My simple solution is to add "int errno" in zutil.h and 
   make the library. If you encounter problem in compiling some of these 
   libraries, compiled versions are provided for convenience:
         <http://openvrml.org/dist/win32_required_libs.zip>

  If you want to have Image Texture support (libpng.lib, libjpeg.lib), 
  javascript support (js32.lib and js32.dll) and java
  support (jvm.lib and jvm.dll, works only with dynamic OpenVRML lib), 
  make sure that all these libraries are installed in your system. 
  By default OpenVRML library is configured with all these support.

  If you use "nmake" utility to make this library, then you have options
  to select all these support selectively.

  If you want to generate C++ code from antlr grammar(Vrml97Parser.g), 
  make sure you have java and antlr installed in your system. Otherwise generated
  code (Vrml97Parser.cpp) will be used for making the library and for this 
  purpose you don't need to download antlr and also you don't need to have
  java. The generated code "Vrml97Parser.cpp" is included with the 
  distribution. By default generated code is used to make library.
 
  If you use "nmake" utility to make this library, then you have an option
  to generate C++ code from antlr grammar or to use generated code directly.

2) Installation using MSVC++6


   You can install either by using Makefile.vc6 or by MSVC++6
   Projects (*.dsp) and workspace file (*.dsw). It is recommended to use
   Makefile.vc6

  a) Using Makefile.vc6

   Use nmake utility provided by Microsoft. Before this you should see all
   executable files, include files and lib files of MSVC++6 are defined in 
   path, include and lib environment variables respectively or execute
   vcvars32.bat script that came with MSVC++.

   For example 
   SET PATH=%PATH%;c:\Program Files\Microsoft Visual Studio\Vc98\bin;c:\Program Files
   \Microsoft Visual Studio\Common\MsDev98\bin;c:\Program Files\Microsoft Visual Studio
   \Common\Tools
   SET INCLUDE=c:\Program Files\Microsoft Visual Studio\Vc98\include;
   c:\Program Files\Microsoft Visual Studio\Vc98\mfc\include
   SET LIB=c:\Program Files\Microsoft Visual Studio\Vc98\lib;
   c:\Program Files\Microsoft Visual Studio\Vc98\mfc\\lib

   Give the command in command mode. Please note that you should be in 
   <openvrml>

      i) nmake /F Makefile.vc6 
               for Help and options
     ii) nmake /F Makefile.vc6 all 
               to build the OpenVRML dll library and the Lookat program 
         using OpenVRML dll.
       By default it will make OpenVRML dynamic library with mozilla 
   javascript, JNI, Zlib, JPEG image and PNG image texture support. Options are there to 
   support all these selectively.

       For example if you don't want javascript support in OpenVRML 
   library, the command is
         nmake /F Makefile.vc6 WITH_JAVASCRIPT=NO all

 
  b) Using MSVC++6 Projects (*.dsp) and workspace files (*.dsw) 

    MSVC++6 Projects (*.dsp) and workspace files (*.dsw) are included for
    openvrml and lookat. Workspace file for all openvrml is kept in 
    '<openvrml>\ide-projects\Windows\VisualC6'. From here you can build 
    whole openvrml (openvrml.lib, openvrml.dll and libantlr).
    For building openvrml, you need to set Project->Set Active Project->openvrml
    and for lookat executable, you set Project->Set Active Project->lookat.

    Remember to set the include and library directories to point to 
    where you've installed OpenVRML's dependencies. You can have options
    to support javascript, JNI, GZIP and image texture support selectively.
    By default all these are supported. If you don't want to support all 
    these selectively then edit the file `ide-projects\Windows\VisualC6
    \config.h` and undefine the corresponding macro. Macros are 
    OPENVRML_ENABLE_SCRIPT_NODE_JAVASCRIPT for javascript support, 
    OPENVRML_ENABLE_SCRIPT_NODE_JAVA for java, OPENVRML_ENABLE_IMAGETEXTURE_NODE  
    for JPEG image and PNG image support and OPENVRML_ENABLE_GZIP
    for Zlib support. 
    Set include directories and library directories for GLUT, Zlib, 
    mozilla javascript (optional), java SDK (optional), PNG image and 
    JPEG image support (optional) library 
    by Tools->Options->Directories in MSVC++6.

       Use Makefile.vc6 in '<openvrml>\java' to make all java support
    classes in jar format (script.jar) by
          nmake /f Makefile.vc6 all
    Please note that you should be in <openvrml>\java.

    Individual workspace file for openvrmlcore is kept in '<openvrml>\
    ide-projects\Windows\VisualC6\openvrml-core' and for openvrmlgl is 
    kept in '<openvrml>\ide-projects\Windows\VisualC6\openvrml-gl'.

    For building only antlr library (libantlr.lib), workspace file libantlr.dsw is
    given in '<openvrml>\ide-projects\Windows\VisualC6\tplib\antlr'.


3) To execute lookat viewer

   If you make openvrml library with OPENVRML_ENABLE_SCRIPT_NODE_JAVA
   (java support) option then you should define CLASSPATH environment 
   variable as <openvrml>\java (or <openvrml>\java\script.jar).

   For java support you need to have "jvm.dll". You should not relocate
   this in system area or in current working directory. You define
   original location of jvm.dll to your PATH environment variable. 

   a) If you use Makefile.vc6
       cd <openvrml>\src\lookat\bin 
       lookat ..\..\..\models\orbit3.wrl

   b) If you use Projects and workspace
        cd <openvrml>\ide-projects\Windows\VisualC6\lookat\Release (In release mode)
        You may need to copy openvrml.dll (<openvrml>\ide-projects\Windows\VisualC6\
        \Release), js32.dll and glut32.dll here or these files
        may be copied into system area (for example c:\WINNT\SYSTEM32 for NT). 
        lookat ..\..\..\..\..\models\orbit3.wrl 
