AT_INIT

AT_BANNER([VRML97 parse tests: code that should be accepted])

AT_SETUP([Ensure the line number is reported correctly for the last token on a line])
AT_CHECK([parse-vrml97 < $abs_top_srcdir/tests/vrml97/good/line-number.wrl],
         [0], [],
         [urn:X-openvrml:stream:1:3:17: warning: axis component of a rotation must be a normalized vector
])
AT_CLEANUP

AT_SETUP([Trivial PROTO containment])
AT_CHECK([parse-vrml97 < $abs_top_srcdir/tests/vrml97/good/proto-containment-trivial.wrl])
AT_CLEANUP

AT_SETUP([PROTO containment 2 levels deep])
AT_CHECK([parse-vrml97 < $abs_top_srcdir/tests/vrml97/good/proto-containment-2-deep.wrl])
AT_CLEANUP

AT_SETUP([PROTO instance as default PROTO field value])
AT_CHECK([parse-vrml97 < $abs_top_srcdir/tests/vrml97/good/proto-field-is-proto.wrl])
AT_CLEANUP

AT_SETUP([Map PROTO eventIn, eventOut to an exposedField])
AT_CHECK([parse-vrml97 < $abs_top_srcdir/tests/vrml97/good/proto-impl-exposedfield-event-is.wrl])
AT_CLEANUP

AT_SETUP([ROUTE referring to the current node])
AT_XFAIL_IF([true])
AT_CHECK([parse-vrml97 < $abs_top_srcdir/tests/vrml97/good/route-referencing-current-node.wrl])
AT_CLEANUP

AT_SETUP([DEF/USE in a PROTO field default value])
AT_CHECK([parse-vrml97 < $abs_top_srcdir/tests/vrml97/good/def-use-in-proto-default-value.wrl])
AT_CLEANUP

AT_SETUP([PROTO in a PROTO field default value])
AT_CHECK([parse-vrml97 < $abs_top_srcdir/tests/vrml97/good/proto-in-proto-default-value.wrl])
AT_CLEANUP

AT_SETUP([Self-referential Script node])
AT_CHECK([parse-vrml97 < $abs_top_srcdir/tests/vrml97/good/self-referential-script.wrl])
AT_CLEANUP

AT_SETUP([Self-referential Script node in a PROTO])
AT_CHECK([parse-vrml97 < $abs_top_srcdir/tests/vrml97/good/self-referential-script-in-proto.wrl])
AT_CLEANUP

AT_SETUP([Unrecognized EXTERNPROTO])
AT_CHECK([parse-vrml97 < $abs_top_srcdir/tests/vrml97/good/unrecognized-externproto.wrl],
         [0],
         [ignore],
         [ignore])
AT_CLEANUP

AT_SETUP([Unimplemented EXTERNPROTO])
AT_CHECK([parse-vrml97 < $abs_top_srcdir/tests/vrml97/good/unimplemented-externproto.wrl],
         [0],
         [ignore],
         [ignore])
AT_CLEANUP

AT_BANNER([VRML97 parse tests: code that should be rejected])

AT_SETUP([Unrecognized node type])
AT_CHECK([parse-vrml97 < $abs_top_srcdir/tests/vrml97/bad/unrecognized-node.wrl], [1], [],
[urn:X-openvrml:stream:1:2:0: error: unknown node type "UnrecognizedNode"
])
AT_CLEANUP

AT_SETUP([PROTO with a conflicting eventIn and exposedField])
AT_CHECK([parse-vrml97 < $abs_top_srcdir/tests/vrml97/bad/proto-eventin-conflict.wrl], [1], [],
[urn:X-openvrml:stream:1:4:22: error: Interface "exposedField MFNode foo" conflicts with previous declaration
])
AT_CLEANUP

AT_SETUP([PROTO with a conflicting eventOut and exposedField])
AT_CHECK([parse-vrml97 < $abs_top_srcdir/tests/vrml97/bad/proto-eventout-conflict.wrl], [1], [],
[urn:X-openvrml:stream:1:4:19: error: Interface "eventOut SFColor foo_changed" conflicts with previous declaration
])
AT_CLEANUP

AT_SETUP([USE a node DEFined in a different PROTO field default value])
AT_CHECK([parse-vrml97 < $abs_top_srcdir/tests/vrml97/bad/use-def-in-different-proto-default-value.wrl], [1], [],
[urn:X-openvrml:stream:1:4:43: error: node "G" has not been defined in this scope
])
AT_CLEANUP

AT_BANNER([X3D VRML parse tests: code that should be accepted])

AT_SETUP([Minimal world])
AT_CHECK([parse-x3dvrml < $abs_top_srcdir/tests/x3dv/good/minimal.x3dv])
AT_CLEANUP

AT_SETUP([Core profile world plus Core component level 2])
AT_CHECK([parse-x3dvrml < $abs_top_srcdir/tests/x3dv/good/core+core2.x3dv])
AT_CLEANUP

AT_SETUP([X3D Core plus VRML97 component])
AT_CHECK([parse-x3dvrml < $abs_top_srcdir/tests/x3dv/good/x3d+vrml97-component.x3dv])
AT_CLEANUP

AT_SETUP([Minimal Interchange world])
AT_CHECK([parse-x3dvrml < $abs_top_srcdir/tests/x3dv/good/minimal-interchange.x3dv])
AT_CLEANUP

AT_SETUP([Minimal Interactive world])
AT_CHECK([parse-x3dvrml < $abs_top_srcdir/tests/x3dv/good/minimal-interactive.x3dv])
AT_CLEANUP

AT_SETUP([Minimal MPEG-4 Interactive world])
AT_CHECK([parse-x3dvrml < $abs_top_srcdir/tests/x3dv/good/minimal-mpeg4.x3dv])
AT_CLEANUP

AT_SETUP([Minimal Immersive world])
AT_CHECK([parse-x3dvrml < $abs_top_srcdir/tests/x3dv/good/minimal-immersive.x3dv])
AT_CLEANUP

AT_SETUP([Minimal Full world])
AT_CHECK([parse-x3dvrml < $abs_top_srcdir/tests/x3dv/good/minimal-full.x3dv])
AT_CLEANUP

AT_BANNER([X3D VRML parse tests: code that should be rejected])

AT_SETUP([Unsupported component level])
AT_CHECK([parse-x3dvrml < $abs_top_srcdir/tests/x3dv/bad/unsupported-component-level.x3dv], [1], [],
[urn:X-openvrml:stream:1:3:10: error: unsupported component level
])
AT_CLEANUP
