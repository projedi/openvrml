#
# OpenVRML
#
# Copyright (C) 2001  S. K. bose
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# 
.SILENT:
# Makefile for openvrml
# Microsoft Visual C++6.0 or later

BINOUTDIR = .\bin
LIBDIR = .\lib
INTDIR = $(BINOUTDIR)
CORELIBDIR = .\openvrml-core
GLLIBDIR = .\openvrml-gl
ANTLRLIBDIR = .\tplib\antlr
LOOKATDIR = .\lookat
CORESOURCE = ..\..\..\src\openvrml\OpenVRML
LIBINCLUDE = ..\..\..\lib
GLSOURCE = ..\..\..\src\openvrml-gl\OpenVRML\Gl
INCLUDECORE = ..\..\..\src\openvrml
SCRIPTDIR = ..\..\..\java

help:
	more < <<
usage: nmake[.exe] /f Makefile.vc6 [options] [target]

where: [target] may be any one of the following ...
    (default)... shows this text
    all         ........ builds OpenVRML dynamic-library and lookat executable
    all-static  ........ builds OpenVRML static-library and lookat executable
                without java (JNI) support.You should undefine the macro
                OPENVRML_HAVE_JNI in winconfig.h      
    openvrml-dynamic ... builds OpenVRML dynamic-library
    openvrml-static  ... builds OpenVRML static-library without java(JNI)
                 support. You should undefine the macro OPENVRML_HAVE_JNI
                 in winconfig.h      
    core-dynamic........ builds OpenVRMLcore dynamic-library 
    core-static ........ builds OpenVRMLcore static-library without java(JNI)
                 support. You should undefine the macro OPENVRML_HAVE_JNI
                 in winconfig.h      
    gl         ........  builds OpenVRMLgl static-library 
    ant         .......  builds antlr static-library
    clean        ....... deletes all intermediate files

    ---- build options -----------------

   WITH_PNG = YES .................... - If it is YES, 
               then you must have libpng in your system and in 
               winconfig.h you must define OPENVRML_HAVE_LIBPNG. 
               This is default. Otherwise build without PNG support
               (if you don't have libpng or don't want PNG support),
               by giving WITH_PNG = NO. You must undefine 
               OPENVRML_HAVE_LIBPNG in winconfig.h for this option.

   PNGLIB_DIR  .................... - required to be defined as 
               the path where your PNGLIB is installed. 
               Default path is C:\User\lpng105, however you may provide 
               it as an environment variable by doing something like 
               this prior to execute nmake:

               set PNGLIB_DIR=C:\lpng105
               However it is not needed, if you give option WITH_PNG=NO

   WITH_JPEG = YES .................... - If it is YES, 
               then you must have libjpeg in your system and in
               winconfig.h you must define OPENVRML_HAVE_LIBJPEG. 
               This is default. Otherwise build without JPEG support
               (if you don't have libjpeg or don't want JPEG support),
               by giving WITH_JPEG = NO. You must undefine 
               OPENVRML_HAVE_LIBJPEG in winconfig.h for this option.


   JPEGLIB_DIR  .................... - required to be defined as the 
               path where your JPEGLIB is installed. 
               Default path is C:\User\jpeg-6b, however you may provide
               it as an environment variable by doing something like 
               this prior to execute nmake:

               set JPEGLIB_DIR=C:\jpeg-6b
               However it is not needed, if you give option WITH_JPEG=NO

   WITH_JAVASCRIPT = YES .................... - If it is YES, 
               then you must have js32.lib and js32.dll from mozilla 
               in your system and in winconfig.h you must define 
               OPENVRML_HAVE_SPIDERMONKEY. This is default. Otherwise 
               build without JAVASCRIPT support (if you don't have 
               SpiderMonkey or don't want JAVASCRIPT support),
               by giving WITH_JAVASCRIPT = NO. You must undefine 
               OPENVRML_HAVE_SPIDERMONKEY in winconfig.h for this option.

   MOZILLALIB_DIR  .................... - required to be defined as 
               the path where your MOZILLALIB is installed. 
               Default path is C:\User\mozilla, however you may provide
               it as an environment variable by doing something like 
               this prior to execute nmake:

               set MOZILLALIB_DIR=C:\mozilla
               However it is not needed, if you give option WITH_JAVASCRIPT=NO

   WITH_JNI =  YES .................... - If it is YES, 
               then you must have jvm.lib and jvm.dll from SUN  
               Microsystems in your system and in winconfig.h you must 
               define OPENVRML_HAVE_JNI. This is default. Otherwise 
               build without JAVA support (if you don't have 
               Java SDK from SUN or don't want JAVA support),
               by giving WITH_JNI = NO. You must undefine 
               OPENVRML_HAVE_JNI in winconfig.h for this option.

   JAVA_DIR  .................... - required to be defined as 
               the path where your Java SDK is installed. 
               Default path is C:\User\jdk1.2.2, however you may provide
               it as an environment variable by doing something like 
               this prior to execute nmake:

               set java_DIR=C:\jdk1.2.2
               However it is not needed, if you give option WITH_JNI=NO


   GLUTLIB_DIR  .................... - required to be defined as the path
               where your GLUT is installed. Default path is 
               C:\User\glut, however you may provide it as an 
               environment variable by doing something like this prior 
               to execute nmake:

               set GLUTLIB_DIR=C:\glut

   ZLIB_DIR  .................... - required to be defined as the path
               where your ZLIB is installed. Default path is C:\User\zlib,
               however you may provide it as an environment variable by
               doing something like this prior to execute nmake:

               set ZLIB_DIR=C:\zlib

 

   WITH_ANTLR=YES  .................... - If it is YES, 
               then you must have java in your system and system will
               generate C++ code from antlr grammar(Vrml97Parser.g). 
               Otherwise it will take generated code(Vrml97Parser.cpp)
               and create the library. Default is NO.

   ANTLRLIB_DIR  .................... - required to be defined as the path
               where your antlr is installed. If you define WITH_ANTLR=YES 
               then you must give this path. Otherwise it is not needed. 
               Default path is C:\User\antlr, however you may provide it 
               as an environment variable by doing something like this 
               prior to execute nmake:

			 set ANTLRLIB_DIR=C:\antlr-2.7.0
               However it is not needed, if you give option WITH_ANTLR=NO




    ---- makefile Author (bose@pavan.barc.ernet.in) notes ------------------
         OpenVRML was originally written by Chris Morley
	 (http://www.vermontel.net/~cmorley/. He has donated it 
	 as a foundation for OVAL development and is currently 
	 maintained at http://sourceforge.net/projects/openvrml

    This makefile suite built against MS Visual C++ 6.0 and tested on
    WindowsNT 4.0, Windows95, and Windows98.

    ---- output directories as configured -------

For Dynamic-library

 Linking Libs  
	
  openvrml.lib :    $(MAKEDIR)\lib
  openvrml.dll :    $(MAKEDIR)\lib

 Object Files 
	
  openvrmlcore :    $(MAKEDIR)\bin
  openvrmlgl   :    $(MAKEDIR)\bin
  libantlr     :    $(MAKEDIR)\tplib\antlr\bin

For Static-library

 Linking Libs  
	
  openvrml.lib :    $(MAKEDIR)\lib

 Object Files 
	
  openvrmlcore :    $(MAKEDIR)\openvrm-core\bin
  openvrmlgl   :    $(MAKEDIR)\openvrml-gl\bin
  libantlr     :    $(MAKEDIR)\tplib\antlr\bin
	 
lookat executable
	 	 
lookat.exe     :    $(MAKEDIR)\lookat\bin
<<

!IF "$(WITH_PNG)" == ""
WITH_PNG = YES
!ENDIF

!IF "$(PNGLIB_DIR)" == ""
PNGLIB_DIR = c:\User\lpng105
!ENDIF

!IF "$(WITH_JPEG)" == ""
WITH_JPEG = YES
!ENDIF

!IF "$(JPEGLIB_DIR)" == ""
JPEGLIB_DIR = c:\User\jpeg-6b
!ENDIF

!IF "$(WITH_JAVASCRIPT)" == ""
WITH_JAVASCRIPT = YES
!ENDIF

!IF "$(MOZILLALIB_DIR)" == ""
MOZILLALIB_DIR = c:\User\mozilla
!ENDIF

!IF "$(WITH_JNI)" == ""
WITH_JNI = YES
!ENDIF

!IF "$(JAVA_DIR)" == ""
JAVA_DIR = c:\User\jdk1.2.2
!ENDIF


!IF "$(ZLIB_DIR)" == ""
ZLIB_DIR = c:\User\zlib
!ENDIF


!IF "$(GLUTLIB_DIR)" == ""
GLUTLIB_DIR = c:\User\glut
!ENDIF

!IF "$(WITH_ANTLR)" == ""
WITH_ANTLR = NO
!ENDIF


!IF "$(ANTLRLIB_DIR)" == ""
ANTLRLIB_DIR = c:\User\antlr-2.7.0
!ENDIF


O=.obj

LIB32 = link.exe -lib

LINK32 = link.exe

COMMONLIB = $(ZLIB_DIR)\zlib.lib\
!IF "$(WITH_PNG)" == "YES"
 $(PNGLIB_DIR)\libpng.lib\
!ENDIF
!IF "$(WITH_JAVASCRIPT)" == "YES"
 $(MOZILLALIB_DIR)\js32.lib\
!ENDIF
!IF "$(WITH_JNI)" == "YES"
 $(JAVA_DIR)\lib\jvm.lib\
!ENDIF
!IF "$(WITH_JPEG)" == "YES"
 $(JPEGLIB_DIR)\libjpeg.lib\
!ENDIF
   
LINKFLAGS = $(GLUTLIB_DIR)\glut32.lib opengl32.lib glu32.lib wsock32.lib\
 /nologo /subsystem:windows /dll /incremental:no\
 /pdb:"$(LIBDIR)/openvrmlcore.pdb" /machine:I386 /NODEFAULTLIB:LIBC


CFLAGS = /nologo /MD /W0 /GR /GX /O2 /D "WIN32" /D "_WINDOWS" \
	/D DLL_EXPORT /Fp"$(INTDIR)\openvrml.pch" /Fo"$(INTDIR)\\"\
	/Fd"$(INTDIR)\\" /FD /c /D "NDEBUG"

PROMPT :
      -@echo Making openvrml library

$(BINOUTDIR) : 
	   if not exist $(BINOUTDIR) mkdir $(BINOUTDIR)

$(LIBDIR) : 
	   if not exist $(LIBDIR) mkdir $(LIBDIR)

NOJNI :
!IF "$(WITH_JNI)" == "YES"
WITH_JNI = NO
!ENDIF

# variables

OBJ1 = $(BINOUTDIR)\Audio$(O) $(BINOUTDIR)\Doc$(O) $(BINOUTDIR)\Doc2$(O) $(BINOUTDIR)\dummysound$(O)\
       $(BINOUTDIR)\field$(O) $(BINOUTDIR)\Image$(O) $(BINOUTDIR)\MathUtils$(O) \
       $(BINOUTDIR)\script$(O) $(BINOUTDIR)\ScriptJDK$(O) $(BINOUTDIR)\VrmlMatrix$(O) \
       $(BINOUTDIR)\System$(O) $(BINOUTDIR)\Viewer$(O)\
       $(BINOUTDIR)\VrmlNamespace$(O)\
       $(BINOUTDIR)\proto$(O) $(BINOUTDIR)\nodeptr$(O) $(BINOUTDIR)\Route$(O) \
       $(BINOUTDIR)\node$(O) $(BINOUTDIR)\VrmlScene$(O)\
	 $(BINOUTDIR)\nodetypeptr$(O) $(BINOUTDIR)\bvolume$(O)\
       $(BINOUTDIR)\VrmlFrustum$(O) $(BINOUTDIR)\VrmlRenderContext$(O) \
	$(BINOUTDIR)\vrml97node$(O)

OBJ2 = $(BINOUTDIR)\OpenGLEvent$(O) $(BINOUTDIR)\ViewerOpenGL$(O)

clean :
!IF "$(WITH_ANTLR)" == "YES"
      if exist Vrml97ParserTokenTypes.hpp del Vrml97ParserTokenTypes.hpp
      if exist Vrml97ParserTokenTypes.txt del Vrml97ParserTokenTypes.txt
      if exist vrml97tokentypes.txt del vrml97tokentypes.txt
!endif
  if exist $(LIBDIR) del /Q $(LIBDIR)
  if exist $(LIBDIR) rmdir $(LIBDIR)
  if exist $(BINOUTDIR) del /Q $(BINOUTDIR)
  if exist $(BINOUTDIR) rmdir $(BINOUTDIR)
  cd .\lookat
  nmake /F Makefile.vc6 clean
  cd ..\openvrml-core
  nmake /F Makefile.vc6 WITH_ANTLR=$(WITH_ANTLR) clean
  cd ..\openvrml-gl
  nmake /F Makefile.vc6 clean
  cd ../tplib/antlr
  nmake /F Makefile.vc6 clean
!IF "$(WITH_JNI)" == "YES"
  cd ../../../../../java
  nmake /F Makefile.vc6 clean
!endif


all: openvrml-dynamic lookat-dynamic script-jar

all-static : openvrml-static lookat-static  

openvrml-dynamic : $(LIBDIR) $(BINOUTDIR) $(LIBDIR)\openvrml.dll
openvrml-static : NOJNI $(LIBDIR)  $(LIBDIR)\openvrml.lib

$(LIBDIR)\openvrml.lib  :  core-static gl prompt
                   if exist $(LIBDIR) del /Q $(LIBDIR)
                   $(LIB32) /nologo /out:$(LIBDIR)\openvrml.lib \
                   $(GLLIBDIR)\lib\openvrmlgl.lib \
                   $(CORELIBDIR)\lib\openvrmlcore.lib

$(LIBDIR)\openvrml.dll  : ant prompt $(OBJ1) $(OBJ2)
                   if exist $(LIBDIR) del /Q $(LIBDIR)
    		   $(LINK32) $(LINKFLAGS) /out:$(LIBDIR)\openvrml.dll \
		   /implib:$(LIBDIR)\openvrml.lib \
		           $(COMMONLIB)\
                   $(ANTLRLIBDIR)\lib\libantlr.lib \
				   $(OBJ1) $(OBJ2) 

 
core-static:
  cd $(CORELIBDIR)
  nmake /F Makefile.vc6 WITH_PNG=$(WITH_PNG) PNGLIB_DIR=$(PNGLIB_DIR)\
  WITH_JPEG=$(WITH_JPEG) JPEGLIB_DIR=$(JPEGLIB_DIR)\
  WITH_JAVASCRIPT=$(WITH_JAVASCRIPT) MOZILLALIB_DIR=$(MOZILLALIB_DIR)\
  WITH_JNI=$(WITH_JNI) JAVA_DIR=$(JAVA_DIR)\
  ZLIB_DIR=$(ZLIB_DIR) LIBTYPE=STATIC\
  ANTLRLIB_DIR=$(ANTLRLIB_DIR) WITH_ANTLR=$(WITH_ANTLR) core
  cd $(MAKEDIR)

core-dynamic:
  cd $(CORELIBDIR)
  nmake /F Makefile.vc6 PNGLIB_DIR=$(PNGLIB_DIR)\
  WITH_JPEG=$(WITH_JPEG) JPEGLIB_DIR=$(JPEGLIB_DIR)\
  WITH_JAVASCRIPT=$(WITH_JAVASCRIPT) MOZILLALIB_DIR=$(MOZILLALIB_DIR)\
  WITH_JNI=$(WITH_JNI) JAVA_DIR=$(JAVA_DIR)\
  ZLIB_DIR=$(ZLIB_DIR)\
  ANTLRLIB_DIR=$(ANTLRLIB_DIR) WITH_ANTLR=$(WITH_ANTLR) core
  cd $(MAKEDIR)

gl:
  cd $(GLLIBDIR)
  nmake /F Makefile.vc6 GLUTLIB_DIR=$(GLUTLIB_DIR) gl
  cd $(MAKEDIR)


ant:
  cd $(ANTLRLIBDIR)
  nmake /F Makefile.vc6 antlr
  cd $(MAKEDIR)

lookat-static:
  cd $(LOOKATDIR)
  nmake /F Makefile.vc6\
  WITH_JAVASCRIPT=$(WITH_JAVASCRIPT) MOZILLALIB_DIR=$(MOZILLALIB_DIR) \
  WITH_JNI=$(WITH_JNI) JAVA_DIR=$(JAVA_DIR)\
  GLUTLIB_DIR=$(GLUTLIB_DIR) lookat-static
  cd $(MAKEDIR)

lookat-dynamic:
  cd $(LOOKATDIR)
  nmake /F Makefile.vc6\
  WITH_JAVASCRIPT=$(WITH_JAVASCRIPT) MOZILLALIB_DIR=$(MOZILLALIB_DIR) \
  WITH_JNI=$(WITH_JNI) JAVA_DIR=$(JAVA_DIR)\
  GLUTLIB_DIR=$(GLUTLIB_DIR) lookat-dynamic
  cd $(MAKEDIR)

script-jar:
!IF "$(WITH_JNI)" == "YES"
  cd $(SCRIPTDIR)
  nmake /F Makefile.vc6 JDK_DIR=$(JAVA_DIR) all
  cd $(MAKEDIR)
!endif

$(BINOUTDIR)\Audio.obj :  $(CORESOURCE)\Audio.cpp $(CORESOURCE)\Audio.h $(CORESOURCE)\Doc.h \
						  $(CORESOURCE)\common.h $(CORESOURCE)\System.h	
            			  $(CPP) $(CFLAGS) /I $(ZLIB_DIR) $(CORESOURCE)\Audio.cpp

$(BINOUTDIR)\Doc.obj :  $(CORESOURCE)\Doc.cpp $(CORESOURCE)\Doc.h .\winconfig.h $(CORESOURCE)\common.h\
						$(CORESOURCE)\doc2.hpp $(CORESOURCE)\System.h
						$(CPP) $(CFLAGS) /I .\  /I $(ZLIB_DIR) $(CORESOURCE)\Doc.cpp

$(BINOUTDIR)\Doc2.obj :  $(CORESOURCE)\Doc2.cpp $(CORESOURCE)\Doc2.hpp .\winconfig.h $(CORESOURCE)\common.h\
						 $(CORESOURCE)\System.h
            			$(CPP) $(CFLAGS) /I .\ /I $(ZLIB_DIR) $(CORESOURCE)\Doc2.cpp

$(BINOUTDIR)\dummysound.obj : $(CORESOURCE)\dummysound.cpp $(CORESOURCE)\sound.h
    						$(CPP) $(CFLAGS) $(CORESOURCE)\dummysound.cpp

$(BINOUTDIR)\field.obj :    $(CORESOURCE)\field.cpp $(CORESOURCE)\field.h \
								$(CORESOURCE)\MathUtils.h \
								$(CORESOURCE)\nodeptr.h\
								$(CORESOURCE)\common.h 
								$(CPP) $(CFLAGS) $(CORESOURCE)\field.cpp

$(BINOUTDIR)\Image.obj :  $(CORESOURCE)\Image.cpp $(CORESOURCE)\Image.h $(CORESOURCE)\common.h \
						  $(CORESOURCE)\Doc.h $(CORESOURCE)\field.h\
						  $(CORESOURCE)\System.h .\winconfig.h
            			  $(CPP) $(CFLAGS) /I $(ZLIB_DIR)\
!IF "$(WITH_PNG)" == "YES"
						  /I $(PNGLIB_DIR)\
!ENDIF
!IF "$(WITH_JPEG)" == "YES"
						  /I $(JPEGLIB_DIR)\
!ENDIF
						  /I .\ /D XMD_H $(CORESOURCE)\Image.cpp
						   						   							 
$(BINOUTDIR)\MathUtils.obj : $(CORESOURCE)\MathUtils.cpp $(CORESOURCE)\MathUtils.h 
							$(CPP) $(CFLAGS) $(CORESOURCE)\MathUtils.cpp

$(BINOUTDIR)\Route.obj : $(CORESOURCE)\Route.cpp $(CORESOURCE)\Route.h $(CORESOURCE)\common.h \
 						$(CORESOURCE)\nodeptr.h 
	                    	$(CPP) $(CFLAGS) $(CORESOURCE)\Route.cpp

$(BINOUTDIR)\script.obj : $(CORESOURCE)\script.cpp $(CORESOURCE)\script.h\
	             		$(CORESOURCE)\common.h\
                              $(CORESOURCE)\private.h\
                              $(CORESOURCE)\VrmlNamespace.h\
                              $(CORESOURCE)\VrmlScene.h\
                              $(CORESOURCE)\doc2.hpp\
                              $(CORESOURCE)\vrml97node.h\
                              $(CORESOURCE)\ScriptJDK.h\
                              .\winconfig.h
					$(CPP) $(CFLAGS)\
!IF "$(WITH_JAVASCRIPT)" == "YES"
					   /I $(MOZILLALIB_DIR)\
!ENDIF
!IF "$(WITH_JNI)" == "YES"
					   /I $(JAVA_DIR)\include /I $(JAVA_DIR)\include\win32\
!ENDIF
					    /I $(ZLIB_DIR) /I .\ \
					    /D XP_PC $(CORESOURCE)\script.cpp
 

$(BINOUTDIR)\ScriptJDK.obj : $(CORESOURCE)\ScriptJDK.cpp $(CORESOURCE)\ScriptJDK.h\
	             		$(CORESOURCE)\common.h\
                              $(CORESOURCE)\doc2.hpp\
                              $(CORESOURCE)\MathUtils.h\
                              $(CORESOURCE)\System.h\
                              $(CORESOURCE)\script.h\
                              $(CORESOURCE)\VrmlNamespace.h\
                              $(CORESOURCE)\node.h\
                              $(CORESOURCE)\VrmlScene.h\
                              $(CORESOURCE)\VrmlEvent.h\
                              $(CORESOURCE)\nodeptr.h\
                              $(CORESOURCE)\Field.h\
                              .\winconfig.h
					$(CPP) $(CFLAGS) /I .\ /I $(JAVA_DIR)\include\
                              /I $(JAVA_DIR)\include\win32 $(CORESOURCE)\ScriptJDK.cpp

$(BINOUTDIR)\System.obj : $(CORESOURCE)\System.cpp $(CORESOURCE)\System.h $(CORESOURCE)\common.h 
						 $(CPP) $(CFLAGS) $(CORESOURCE)\System.cpp

$(BINOUTDIR)\Viewer.obj :   $(CORESOURCE)\Viewer.cpp $(CORESOURCE)\Viewer.h\
							$(CORESOURCE)\MathUtils.h\
							$(CORESOURCE)\VrmlFrustum.h\
							$(CORESOURCE)\field.h\
							$(CORESOURCE)\bvolume.h\
							$(CORESOURCE)\VrmlScene.h\
							$(CORESOURCE)\common.h \
							.\winconfig.h
							$(CPP) $(CFLAGS) /I .\ $(CORESOURCE)\Viewer.cpp

$(BINOUTDIR)\vrml97node.obj :   $(CORESOURCE)\vrml97node.cpp $(CORESOURCE)\vrml97node.h \
									$(CORESOURCE)\node.h\
									$(CORESOURCE)\VrmlNamespace.h\
									$(CORESOURCE)\proto.h\
									$(CORESOURCE)\Doc.h\
									$(CORESOURCE)\doc2.hpp\
									$(CORESOURCE)\Audio.h\
									$(CORESOURCE)\Sound.h\
									$(CORESOURCE)\MathUtils.h\
									$(CORESOURCE)\Viewer.h\
									$(CORESOURCE)\field.h\
									$(CORESOURCE)\Image.h\
									$(CORESOURCE)\VrmlScene.h\
									$(CORESOURCE)\common.h \
									.\winconfig.h
									$(CPP) $(CFLAGS) /I .\ $(CORESOURCE)\vrml97node.cpp



Vrml97Parser       :                   $(CORESOURCE)\vrml97parser.g $(CORESOURCE)\Vrml97TokenTypes.txt 
						   copy $(CORESOURCE)\Vrml97TokenTypes.txt vrml97tokentypes.txt
						   SET CLASSPATH=$(ANTLRLIB_DIR)
						   java antlr.Tool -o $(CORESOURCE) $(CORESOURCE)\vrml97parser.g

$(BINOUTDIR)\VrmlMatrix.obj  :         $(CORESOURCE)\VrmlMatrix.cpp \
                                       $(CORESOURCE)\field.h $(CORESOURCE)\private.h \
						   $(CORESOURCE)\VrmlMatrix.h 
						   $(CPP) $(CFLAGS) $(CORESOURCE)\VrmlMatrix.cpp


$(BINOUTDIR)\bvolume.obj : $(CORESOURCE)\bvolume.cpp $(CORESOURCE)\bvolume.h\
                           $(CORESOURCE)\private.h $(CORESOURCE)\field.h\
                           $(CORESOURCE)\VrmlMatrix.h $(CORESOURCE)\VrmlFrustum.h\
                           $(CORESOURCE)\MathUtils.h                							
				   $(CPP) $(CFLAGS) $(CORESOURCE)\bvolume.cpp

$(BINOUTDIR)\VrmlFrustum.obj : $(CORESOURCE)\VrmlFrustum.cpp $(CORESOURCE)\VrmlFrustum.h\
								$(CORESOURCE)\MathUtils.h $(CORESOURCE)\common.h 							
								$(CPP) $(CFLAGS) /I .\ $(CORESOURCE)\VrmlFrustum.cpp

    
$(BINOUTDIR)\VrmlNamespace.obj :  $(CORESOURCE)\VrmlNamespace.cpp $(CORESOURCE)\VrmlNamespace.h\
								$(CORESOURCE)\node.h\
								$(CORESOURCE)\VrmlNamespace.h\
								$(CORESOURCE)\field.h\
								$(CORESOURCE)\Route.h\
								$(CORESOURCE)\script.h\
								$(CORESOURCE)\proto.h\
								$(CORESOURCE)\common.h 
								$(CPP) $(CFLAGS) $(CORESOURCE)\VrmlNamespace.cpp


$(BINOUTDIR)\node.obj :  $(CORESOURCE)\node.cpp $(CORESOURCE)\node.h\
                                                $(CORESOURCE)\field.h\
                                                $(CORESOURCE)\doc2.hpp\
								$(CORESOURCE)\MathUtils.h\
								$(CORESOURCE)\nodeptr.h\
								$(CORESOURCE)\Route.h\
								$(CORESOURCE)\bvolume.h\
								$(CORESOURCE)\VrmlNamespace.h\
								$(CORESOURCE)\system.h\
								$(CORESOURCE)\VrmlScene.h\
								$(CORESOURCE)\VrmlRenderContext.h\
                                                $(CORESOURCE)\proto.h\
								$(CORESOURCE)\common.h
								$(CPP) $(CFLAGS) $(CORESOURCE)\node.cpp

$(BINOUTDIR)\proto.obj:                         $(CORESOURCE)\proto.cpp\
								$(CORESOURCE)\Viewer.h\
								$(CORESOURCE)\VrmlNamespace.h\
								$(CORESOURCE)\node.h\
								$(CORESOURCE)\proto.h\
								$(CORESOURCE)\Route.h\
								$(CORESOURCE)\bvolume.h\
								$(CORESOURCE)\common.h
								$(CPP) $(CFLAGS) $(CORESOURCE)\proto.cpp

$(BINOUTDIR)\nodeptr.obj: $(CORESOURCE)\nodeptr.cpp\
								$(CORESOURCE)\node.h\
								$(CORESOURCE)\nodeptr.h\
								$(CORESOURCE)\common.h
								$(CPP) $(CFLAGS) $(CORESOURCE)\nodeptr.cpp



$(BINOUTDIR)\nodetypeptr.obj : $(CORESOURCE)\nodetypeptr.cpp\
                                                $(CORESOURCE)\nodetypeptr.h\
								$(CORESOURCE)\node.h\
								$(CORESOURCE)\common.h
								$(CPP) $(CFLAGS) /I $(ZLIB_DIR)\
							      $(CORESOURCE)\nodetypeptr.cpp

$(BINOUTDIR)\VrmlRenderContext.obj : $(CORESOURCE)\VrmlRenderContext.cpp $(CORESOURCE)\VrmlRenderContext.h\
								$(CORESOURCE)\bvolume.h 							
								$(CPP) $(CFLAGS) $(CORESOURCE)\VrmlRenderContext.cpp

$(BINOUTDIR)\VrmlScene.obj :		            $(CORESOURCE)\VrmlScene.cpp $(CORESOURCE)\VrmlScene.h\
!IF "$(WITH_ANTLR)" == "YES"
				                       Vrml97Parser\
!ENDIF
                                                $(CORESOURCE)\Doc2.hpp $(CORESOURCE)\System.h\
								$(CORESOURCE)\Viewer.h\
								$(CORESOURCE)\MathUtils.h\
								$(CORESOURCE)\vrml97node.h $(CORESOURCE)\VrmlNamespace.h\
								$(CORESOURCE)\Vrml97Parser.hpp \
								$(CORESOURCE)\VrmlRenderContext.h\
								$(CORESOURCE)\node.h\
								$(CORESOURCE)\common.h\
								.\winconfig.h
								$(CPP) $(CFLAGS)  /GR /I $(LIBINCLUDE) /I .\ /I $(ZLIB_DIR) $(CORESOURCE)\VrmlScene.cpp



#For OpenVRMLgl source

$(BINOUTDIR)\OpenGLEvent.obj :  $(GLSOURCE)\OpenGLEvent.cpp\
			                $(GLSOURCE)\OpenGLEvent.h
            		          $(CPP) $(CFLAGS) $(GLSOURCE)\OpenGLEvent.cpp

$(BINOUTDIR)\ViewerOpenGL.obj :  $(GLSOURCE)\ViewerOpenGL.cpp\
						$(CORESOURCE)\system.h\
						$(CORESOURCE)\viewer.h\
						$(CORESOURCE)\MathUtils.h\
						$(CORESOURCE)\VrmlScene.h\
						$(CORESOURCE)\vrml97node.h\
						$(CORESOURCE)\bvolume.h\
						$(CORESOURCE)\VrmlFrustum.h\
						.\winconfig.h\
						$(GLSOURCE)\OpenGLEvent.h\
						$(GLSOURCE)\ViewerOpenGL.h
            			      $(CPP) $(CFLAGS) /I .\ \
						/I $(INCLUDECORE) /I $(GLUTLIB_DIR)\
						$(GLSOURCE)\ViewerOpenGL.cpp
