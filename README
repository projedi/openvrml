LibVRML97 library version 0.8.2, January, 2000
Copyright (C) 1998,1999,2000 Chris Morley <cmorley@vermontel.net>
Portions Copyright SGI and others

Available from <URL:http://www.openvrml.org/modules/libvrml97.html>

See the NEWS file for a list of changes in this release.
See the TODO file for a list of things we are planning to implement for future
releases.


What is LibVRML97?
==================

LibVRML97 is a portable C++ class library for reading and displaying VRML97
files.  This distribution includes Lookat, a sample viewer program that uses
GLUT.


How can I use it?
=================

The code is copyrighted, but is provided free of charge for any purpose.  Refer
to the file COPYING for details.  The library includes the SGI VRML2 parser,
which has its own copyright (see README.SGI) and uses other libraries which may
have their own restrictions.


What else do I need?
====================

LibVRML97 requires zlib, libpng, libjpeg, OpenGL/Mesa, and GLUT to build.  If
any of these are not already present on your system, first consult your
operating system vendor for packages tailored to your particular operating
system/distribution.  Failing that, consult the following URLs:

    zlib:       <URL:http://www.cdrom.com/pub/infozip/zlib/>
    libpng:     <URL:http://www.cdrom.com/pub/png/pngcode.html>
    libjpeg:    <URL:http://www.ijg.org>
    Mesa:       <URL:http://www.mesa3d.org>
    GLUT:       <URL:http://reality.sgi.com/mjk_asd/glut3/>


Installation
============

Refer to the file INSTALL for detailed installation instructions.


What VRML97 nodes are supported by the VRML97 library?
======================================================

Details of the implementation status of each node can be found in NODES.  All of
the static geometry is supported except generation of per vertex normals.  Text/
FontStyle node support is very limited.

Unimplemented:  drag sensors (CylinderSensor, PlaneSensor, and 
SphereSensor), navigation types other than examine.


X11 colormap flashing on 8-bit displays
=======================================

If you are having trouble with colormap flashing on an 8-bit display, try
restarting your X server (e.g., log out and back in in an xdm environment) and
running "xstdcmap -default" BEFORE running anything else.  In fact, you might
put that command in your X startup script.  But you should really get a graphics
card with 24-bit color.  Tell your boss I said so.


Bug reports
===========

Please send bug reports to the LibVRML97 mailing list,
<URL:http://www.egroups.com/group/libvrml97/>.  The code does not attempt to
validate the input--it expects proper syntax in many places.  Although I would
prefer the code to handle input errors gracefully, less priority will be given
to bugs resulting from invalid inputs.  Please run one of the VRML syntax
checkers on your file before submitting a bug report.


Design
======

The very brief architecture description:

  * VrmlScene is the top-level class; a scene corresponds to reading in a VRML
    file (and all its associated data).  A VrmlScene object will have data
    members for the node type definitions (built-in and PROTOs/EXTERNPROTOs) and
    the actual nodes of the scene graph.  The variables are d_namespace and
    d_nodes, respectively.  You can pretty much ignore everything else in
    VrmlScene.

  * A VrmlNamespace is just a list of node type definitions and a list of node
    name definitions.  So if you want to find a particular named node in a
    scene, you would use the findNode method of the relevant namespace.  Each
    PROTO gets its own namespace.

  * Each built in node type has a corresponding VrmlNode* class.  PROTO'd node
    instances are represented by the VrmlNodeProto class.  Vrml nodes are built
    from the primitive field types, represented by the VrmlSF* and VrmlMF*
    (single- and multi-valued) classes.  For each field of each node as defined
    by the VRML97 spec there is a data member in the corresponding node class.
    For example, the Group node has a field called children of type MFNode.  The
    VrmlNodeGroup class has a data member VrmlMFNode d_children.  There is a lot
    of code, but it is pretty easy to find what you want once you understand
    the structure.


SGI Parser bugs
===============

Just for the record, these are the bugs I have found & fixed in the 
SGI parser.

- Lexer couldn't handle "0." or leading + on numbers.

- hasExposedField checked eventIn/Out wrong names.

- FontStyle family is an MFString.

- IS statements with MFNode/SFNode fields didn't work.

- Lexer whitespace rules break "#viewpoint" URL parsing.


